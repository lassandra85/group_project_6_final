{"version":3,"file":"static/js/664.51c20506.chunk.js","mappings":"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","sources":["webpack://group_project_6_final/./src/components/LoginForm/LoginForm.module.css?4ac5","helpers/loginDataValidation.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx","webpack://group_project_6_final/./src/pages/AddPetPage/AddPetPage.module.css?a97e"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"header\":\"LoginForm_header__SClA8\",\"formRegister\":\"LoginForm_formRegister__efCmK\",\"inputRegister\":\"LoginForm_inputRegister__wAgzU\",\"inputRegisterError\":\"LoginForm_inputRegisterError__xruVl\",\"inputRegisterGood\":\"LoginForm_inputRegisterGood__WtkPZ\",\"bttnRegister\":\"LoginForm_bttnRegister__IBYPY\",\"containerLog\":\"LoginForm_containerLog__FbvL7\",\"text\":\"LoginForm_text__um7cL\",\"link\":\"LoginForm_link__IJw1a\",\"passwordCont\":\"LoginForm_passwordCont__mEq4p\",\"eyeBttn\":\"LoginForm_eyeBttn__y-8Kj\",\"errorRassword\":\"LoginForm_errorRassword__S-hoe\",\"inputGood\":\"LoginForm_inputGood__J+3NJ\"};","import * as yup from 'yup';\n\n\n\nexport const loginValidation = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Please enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')    \n    .required('Password is required'),\n});","import css from '../LoginForm/LoginForm.module.css';\nimport { BsEyeSlash, BsEye } from 'react-icons/bs';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { loginValidation } from '../../helpers/loginDataValidation';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [isActive, setActive] = useState(false);\n  const handleClick = () => {\n    setActive(!isActive);\n  };\n  // let [pass, setPass] = useState(true);\n  // let [em, setEm] = useState(true);\n  // let [err, setErr] = useState(true);\n  let [err2, setErr2] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async values => {\n    // evt.preventDefault();\n    // const form = evt.currentTarget;\n    // const emailField = form.elements.email.value;\n    // const passwordField = form.elements.password.value;\n\n    // const credentials = {\n    //   email: emailField,\n    //   password: passwordField,\n    // };\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await dispatch(\n        logIn({ email: values.email, password: values.password })\n      ).then(data => {\n        if (data.error) {\n          setErr2(false);\n        } else {\n          setErr2(true);\n          navigate('/user');\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n\n    //  else if (!emailField && passwordField) {\n    //   setEm((em = false));\n    //   setErr((err = true));\n    //   setPass((pass = true));\n    // } else if (!emailField && !passwordField) {\n    //   setErr((err = false));\n    //   setPass((pass = true));\n    //   setEm((em = true));\n    // } else if (emailField && !passwordField) {\n    //   setPass((pass = false));\n    //   setEm((em = true));\n    //   setErr((err = true));\n    // }\n  };\n\n  const { values, errors, touched, handleChange, handleSubmit } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginValidation,\n    onSubmit,\n  });\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Login</h2>\n\n      <form className={css.formRegister} onSubmit={handleSubmit} noValidate autoComplete='off'>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className={\n                errors.email && touched.email\n                  ? css.inputRegisterError\n                  : css.inputRegister\n              }\n              value={values.email}\n              onChange={handleChange}\n            ></input>\n          </label>\n          {errors.email && touched.email && (\n            <p className={css.errorRassword}>{errors.email}</p>\n          )}\n        </div>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Password\"\n              type={isActive ? 'text' : 'password'}\n              name=\"password\"\n              className={\n                errors.password && touched.password\n                  ? css.inputRegisterError\n                  : css.inputRegister\n              }\n              value={values.password}\n              onChange={handleChange}\n            ></input>\n            <button type=\"button\" className={css.eyeBttn} onClick={handleClick}>\n              {isActive ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n              {/* {!isActive && values.password.length > 5 && err2 && (\n                <BsCheck2 size={24} color=\"#00C3AD\" />\n              )} */}\n            </button>\n          </label>\n          {/* {pass ? '' : <p className={css.errorRassword}>Enter password</p>}\n          {em ? '' : <p className={css.errorRassword}>Enter email</p>}\n          {err ? '' : <p className={css.errorRassword}>Enter data</p>} */}\n          {errors.password &&\n            touched.password \n             && (\n              <p className={css.errorRassword}>{errors.password}</p>\n            )}\n          {/* {values.password.length > 5 && err2 && (\n            <p className={css.inputGood}>Password is secure</p>\n          )} */}\n          {err2 || errors.password || errors.email ? (\n            ''\n          ) : (\n            <p className={css.errorRassword}>Email or password incorrect</p>\n          )}\n        </div>\n\n        <button type=\"submit\" className={css.bttnRegister}>\n          Login\n        </button>\n      </form>\n      <div className={css.containerLog}>\n        <p className={css.text}>Don't have an account?</p>&nbsp;\n        <NavLink className={css.link} to=\"/register\">\n          Register\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from \"../../components/LoginForm/LoginForm\";\nimport css from \"../AddPetPage/AddPetPage.module.css\"; \n\nconst LoginPage = () => {\n    return (\n        <div className={css.mainContainer}>\n            <LoginForm></LoginForm>\n        </div>\n    );\n}\n\nexport default LoginPage;","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"AddPetPage_mainContainer__JfxWF\"};"],"names":["loginValidation","yup","email","required","password","dispatch","useDispatch","navigate","useNavigate","useState","isActive","setActive","err2","setErr2","loading","setLoading","onSubmit","values","logIn","then","data","error","console","useFormik","initialValues","validationSchema","errors","touched","handleChange","handleSubmit","className","css","noValidate","autoComplete","placeholder","type","name","id","value","onChange","onClick","size","color","to"],"sourceRoot":""}