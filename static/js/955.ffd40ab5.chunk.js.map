{"version":3,"file":"static/js/955.ffd40ab5.chunk.js","mappings":"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","sources":["webpack://group_project_6_final/./src/components/LoginForm/LoginForm.module.css?4ac5","helpers/loginDataValidation.js","components/LoginForm/LoginForm.jsx","webpack://group_project_6_final/./src/components/RegisterForm/RegisterForm.module.css?a5d4","helpers/registerDataValidation.js","components/RegisterForm/RegisterForm.jsx","components/AuthForm/AuthForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://group_project_6_final/./src/pages/AddPetPage/AddPetPage.module.css?a97e"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"header\":\"LoginForm_header__SClA8\",\"formRegister\":\"LoginForm_formRegister__efCmK\",\"inputRegister\":\"LoginForm_inputRegister__wAgzU\",\"inputRegisterError\":\"LoginForm_inputRegisterError__xruVl\",\"inputRegisterGood\":\"LoginForm_inputRegisterGood__WtkPZ\",\"bttnRegister\":\"LoginForm_bttnRegister__IBYPY\",\"containerLog\":\"LoginForm_containerLog__FbvL7\",\"text\":\"LoginForm_text__um7cL\",\"link\":\"LoginForm_link__IJw1a\",\"passwordCont\":\"LoginForm_passwordCont__mEq4p\",\"eyeBttn\":\"LoginForm_eyeBttn__y-8Kj\",\"errorRassword\":\"LoginForm_errorRassword__S-hoe\",\"inputGood\":\"LoginForm_inputGood__J+3NJ\"};","import * as yup from 'yup';\n\n\n\nexport const loginValidation = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Please enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string('Enter your password')    \n    .required('Password is required'),\n});","import css from '../LoginForm/LoginForm.module.css';\nimport { BsEyeSlash, BsEye } from 'react-icons/bs';\nimport { NavLink } from 'react-router-dom';\nimport { useState } from 'react';\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { loginValidation } from '../../helpers/loginDataValidation';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  //const navigate = useNavigate();\n\n  const [isActive, setActive] = useState(false);\n  const handleClick = () => {\n    setActive(!isActive);\n  };\n  // let [pass, setPass] = useState(true);\n  // let [em, setEm] = useState(true);\n  // let [err, setErr] = useState(true);\n  let [err2, setErr2] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  const onSubmit = async values => {\n    // evt.preventDefault();\n    // const form = evt.currentTarget;\n    // const emailField = form.elements.email.value;\n    // const passwordField = form.elements.password.value;\n\n    // const credentials = {\n    //   email: emailField,\n    //   password: passwordField,\n    // };\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n    try {\n      await dispatch(\n        logIn({ email: values.email, password: values.password })\n      ).then(data => {\n        if (data.error) {\n          setErr2(false);\n        } else {\n          setErr2(true);\n          //navigate('/user');\n        }\n      });\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n\n    //  else if (!emailField && passwordField) {\n    //   setEm((em = false));\n    //   setErr((err = true));\n    //   setPass((pass = true));\n    // } else if (!emailField && !passwordField) {\n    //   setErr((err = false));\n    //   setPass((pass = true));\n    //   setEm((em = true));\n    // } else if (emailField && !passwordField) {\n    //   setPass((pass = false));\n    //   setEm((em = true));\n    //   setErr((err = true));\n    // }\n  };\n\n  const { values, errors, touched, handleChange, handleSubmit } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: loginValidation,\n    onSubmit,\n  });\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Login</h2>\n\n      <form className={css.formRegister} onSubmit={handleSubmit} noValidate autoComplete='off'>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className={\n                errors.email && touched.email\n                  ? css.inputRegisterError\n                  : css.inputRegister\n              }\n              value={values.email}\n              onChange={handleChange}\n            ></input>\n          </label>\n          {errors.email && touched.email && (\n            <p className={css.errorRassword}>{errors.email}</p>\n          )}\n        </div>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Password\"\n              type={isActive ? 'text' : 'password'}\n              name=\"password\"\n              className={\n                errors.password && touched.password\n                  ? css.inputRegisterError\n                  : css.inputRegister\n              }\n              value={values.password}\n              onChange={handleChange}\n            ></input>\n            <button type=\"button\" className={css.eyeBttn} onClick={handleClick}>\n              {isActive ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n              {/* {!isActive && values.password.length > 5 && err2 && (\n                <BsCheck2 size={24} color=\"#00C3AD\" />\n              )} */}\n            </button>\n          </label>\n          {/* {pass ? '' : <p className={css.errorRassword}>Enter password</p>}\n          {em ? '' : <p className={css.errorRassword}>Enter email</p>}\n          {err ? '' : <p className={css.errorRassword}>Enter data</p>} */}\n          {errors.password &&\n            touched.password \n             && (\n              <p className={css.errorRassword}>{errors.password}</p>\n            )}\n          {/* {values.password.length > 5 && err2 && (\n            <p className={css.inputGood}>Password is secure</p>\n          )} */}\n          {err2 || errors.password || errors.email ? (\n            ''\n          ) : (\n            <p className={css.errorRassword}>Email or password incorrect</p>\n          )}\n        </div>\n\n        <button type=\"submit\" className={css.bttnRegister}>\n          Login\n        </button>\n      </form>\n      <div className={css.containerLog}>\n        <p className={css.text}>Don't have an account?</p>&nbsp;\n        <NavLink className={css.link} to=\"/register\">\n          Register\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"header\":\"RegisterForm_header__ugVkt\",\"formRegister\":\"RegisterForm_formRegister__JQ41P\",\"inputRegister\":\"RegisterForm_inputRegister__fjx69\",\"inputRegisterError\":\"RegisterForm_inputRegisterError__GBChO\",\"bttnRegister\":\"RegisterForm_bttnRegister__h7T-X\",\"containerLog\":\"RegisterForm_containerLog__7q5c7\",\"text\":\"RegisterForm_text__cFC0o\",\"link\":\"RegisterForm_link__xu2eW\",\"passwordCont\":\"RegisterForm_passwordCont__u4mox\",\"eyeBttn\":\"RegisterForm_eyeBttn__OELqF\",\"errorRassword\":\"RegisterForm_errorRassword__S7RI4\",\"inputGood\":\"RegisterForm_inputGood__Hm698\"};","import * as yup from 'yup';\n\n\nconst emailRules = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/;\nconst passwordRules = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z!@#$%^&*_.-]+$/;\n\n\nexport const registerValidation = yup.object({\n  email: yup\n    .string('Enter your email')\n    .email('Please enter a valid email')\n    .required('Email is required')\n    .matches(emailRules, {message:'Please enter a valid email'}),\n  password: yup\n    .string('Enter your password')\n    .min(6, 'Password should be min 6 characters')\n    .required('Password is required')\n    .matches(passwordRules,{message:\"Password must be min 6 characters, at least 1 uppercase and 1 lowercase letter and 1 number\"}),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Password must match')\n    .required('Confirm password is required')\n    \n});","import css from '../RegisterForm/RegisterForm.module.css';\nimport { NavLink } from 'react-router-dom';\nimport { BsEyeSlash, BsEye, BsCheck2 } from 'react-icons/bs';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\nimport { useFormik } from 'formik';\nimport { registerValidation } from '../../helpers/registerDataValidation';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  //const navigate = useNavigate();\n\n  const [isActive, setActive] = useState(false);\n  const handleClick = () => {\n    setActive(!isActive);\n  };\n  const [isActive2, setActive2] = useState(false);\n  const handleClick2 = () => {\n    setActive2(!isActive2);\n  };\n\n  const [loading, setLoading] = useState(false);\n\n  // let [pass, setPass] = useState(true);\n  // let [em, setEm] = useState(true);\n  // let [err, setErr] = useState(true);\n  let [dublicate, setDublicate] = useState(true);\n\n  const onSubmit = async values => {\n    //evt.preventDefault();\n    // const form = evt.currentTarget;\n    // const emailField = form.elements.email.value;\n    // const passwordField = form.elements.password.value;\n    // const confirmPasswordField = form.elements.confirmPassword.value;\n    // const credentials = {\n    //   email: emailField,\n    //   password: passwordField,\n    // };\n    if (loading) {\n      return;\n    }\n\n    // if (\n    //   passwordField === confirmPasswordField &&\n    //   emailField &&\n    //   passwordField !== '' &&\n    //   confirmPasswordField !== ''\n    // ) {\n    // setPass(pass);\n    // setEm(em);\n    // setErr(err);\n    setLoading(true);\n    try {\n      const result = await dispatch(\n        register({ email: values.email, password: values.password })\n      );\n\n      if (result.payload === 'Request failed with status code 409') {\n        setDublicate(false);\n      } else {\n        setDublicate(true);\n        //form.reset();\n        //navigate('/user');\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n    // } else if (\n    //   !emailField &&\n    //   confirmPasswordField === passwordField &&\n    //   passwordField !== '' &&\n    //   confirmPasswordField !== ''\n    // ) {\n    //   setEm((em = false));\n    //   setErr((err = true));\n    //   setPass((pass = true));\n    // } else if (!emailField && !passwordField && !confirmPasswordField) {\n    //   setErr((err = false));\n    //   setPass((pass = true));\n    //   setEm((em = true));\n    // } else if (confirmPasswordField !== passwordField) {\n    //   setPass((pass = false));\n    //   setEm((em = true));\n    //   setErr((err = true));\n    // } else if (emailField && !passwordField) {\n    //   setPass((pass = false));\n    //   setEm((em = true));\n    //   setErr((err = true));\n  };\n\n  const { values, errors, touched, handleChange, handleSubmit } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: registerValidation,\n    onSubmit,\n  });\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Registration</h2>\n\n      <form className={css.formRegister} onSubmit={handleSubmit} noValidate autoComplete='off'>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Email\"\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className={\n                errors.email && touched.email\n                  ? css.inputRegisterError\n                  : css.inputRegister\n              }\n              value={values.email}\n              onChange={handleChange}\n            ></input>\n          </label>\n          {errors.email && touched.email && (\n            <p className={css.errorRassword}>{errors.email}</p>\n          )}\n          {dublicate ? '' : <p className={css.errorRassword}>Email in use.</p>}\n        </div>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Password\"\n              type={isActive ? 'text' : 'password'}\n              name=\"password\"\n              id=\"password\"\n              className={\n                errors.password && touched.password\n                  ? css.inputRegisterError\n                  : css.inputRegister\n              }\n              value={values.password}\n              onChange={handleChange}\n            ></input>\n            <button type=\"button\" className={css.eyeBttn} onClick={handleClick}>\n              {isActive &&  values.password.length<6 &&\n                (<BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n                {!isActive &&  values.password.length<6 &&(\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n              {isActive &&  errors.password && values.password.length>5\n                && (<BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n              {!isActive && errors.password && values.password.length > 5\n                && (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n              \n              \n              {values.password.length > 5 &&                 \n                !errors.password && <BsCheck2 size={24} color=\"#00C3AD\" />}\n              \n            </button>\n          </label>\n          {errors.password && touched.password && (\n            <p className={css.errorRassword}>{errors.password}</p>\n          )}\n          {values.password.length > 5 &&             \n            !errors.password && (\n              <p className={css.inputGood}>Password is secure</p>\n            )}\n        </div>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Confirm password\"\n              type={isActive2 ? 'text' : 'password'}\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              className={\n                errors.confirmPassword && touched.confirmPassword\n                  ? css.inputRegisterError\n                  : css.inputRegister\n              }\n              value={values.confirmPassword}\n              onChange={handleChange}\n            ></input>\n            <button\n              type=\"button\"\n              className={css.eyeBttn}\n              onClick={handleClick2}\n            >\n              {isActive2 ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n            </button>\n          </label>\n          {errors.confirmPassword && touched.confirmPassword && (\n            <p className={css.errorRassword}>{errors.confirmPassword}</p>\n          )}\n\n          {/* {pass ? '' : <p className={css.errorRassword}>Password mismatch</p>}\n          {em ? '' : <p className={css.errorRassword}>Email incorrect</p>}\n          {err ? '' : <p className={css.errorRassword}>Enter data</p>} */}\n        </div>\n        <button type=\"submit\" className={css.bttnRegister}>\n          Registration\n        </button>\n      </form>\n\n      <div className={css.containerLog}>\n        <p className={css.text}>Already have an account?</p>&nbsp;\n        <NavLink className={css.link} to=\"/login\">\n          Login\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import LoginForm from \"components/LoginForm/LoginForm\";\nimport  RegisterForm  from \"../RegisterForm/RegisterForm\";\nimport  RegisterPage  from \"pages/RegisterPage/RegisterPage\";\n \n\nconst AuthForm = () => {\n\n\n  return (\n    <>\n      {RegisterPage ? <RegisterForm></RegisterForm> : <LoginForm></LoginForm>}          \n    </>\n  )\n  \n};\n\nexport default AuthForm;\n","import AuthForm from \"../../components/AuthForm/AuthForm\"\nimport css from \"../AddPetPage/AddPetPage.module.css\"; \n\n// const str = 'vovan@mail.com';\n// const cutStr = str.split('@')\n\n\nconst RegisterPage = () => {\n    return (\n        <div className={css.mainContainer}>\n                <AuthForm></AuthForm>\n        </div>\n    );\n}\n\nexport default RegisterPage;","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"AddPetPage_mainContainer__JfxWF\"};"],"names":["loginValidation","yup","email","required","password","dispatch","useDispatch","useState","isActive","setActive","err2","setErr2","loading","setLoading","onSubmit","values","logIn","then","data","error","console","useFormik","initialValues","validationSchema","errors","touched","handleChange","handleSubmit","className","css","noValidate","autoComplete","placeholder","type","name","id","value","onChange","onClick","size","color","to","registerValidation","matches","message","min","confirmPassword","oneOf","isActive2","setActive2","dublicate","setDublicate","register","payload","length","RegisterPage","LoginForm"],"sourceRoot":""}