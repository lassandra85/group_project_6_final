{"version":3,"file":"static/js/656.639b6b0f.chunk.js","mappings":"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","sources":["webpack://group_project_6_final/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://group_project_6_final/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","components/AuthForm/AuthForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"header\":\"LoginForm_header__SClA8\",\"formRegister\":\"LoginForm_formRegister__efCmK\",\"inputRegister\":\"LoginForm_inputRegister__wAgzU\",\"bttnRegister\":\"LoginForm_bttnRegister__IBYPY\",\"containerLog\":\"LoginForm_containerLog__FbvL7\",\"text\":\"LoginForm_text__um7cL\",\"link\":\"LoginForm_link__IJw1a\",\"passwordCont\":\"LoginForm_passwordCont__mEq4p\",\"eyeBttn\":\"LoginForm_eyeBttn__y-8Kj\",\"errorRassword\":\"LoginForm_errorRassword__S-hoe\"};","import css from '../LoginForm/LoginForm.module.css';\nimport { BsEyeSlash, BsEye } from 'react-icons/bs';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isActive, setActive] = useState(false);\n  const handleClick = () => {\n    setActive(!isActive);\n  };\n  let [pass, setPass] = useState(true);\n  let [em, setEm] = useState(true);\n  let [err, setErr] = useState(true);\n  let [log, setLog] = useState(true);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const emailField = form.elements.email.value;\n    const passwordField = form.elements.password.value;\n\n    if (\n      passwordField && emailField) {\n      dispatch(\n        logIn({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      ).then(data => {\n        if (data.payload.message === \"\") {\n          setLog(true)\n          form.reset();\n          navigate('/user');\n        } else {\n          setLog(false)          \n        }\n      })\n      \n    } else if (\n      !emailField && passwordField) {\n      setEm((em = false));\n      setErr((err = true));\n      setPass((pass = true));\n    } else if (!emailField && !passwordField) {\n      setErr((err = false));\n      setPass((pass = true));\n      setEm((em = true));\n    } else if (emailField && !passwordField) {\n      setPass((pass = false));\n      setEm((em = true));\n      setErr((err = true));\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Login</h2>\n\n      <form className={css.formRegister} onSubmit={handleSubmit}>\n        <label>\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            className={css.inputRegister}\n          ></input>\n        </label>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Password\"\n              type={isActive ? 'text' : 'password'}\n              name=\"password\"\n              className={css.inputRegister}\n            ></input>\n            <button type=\"button\" className={css.eyeBttn} onClick={handleClick}>\n              {isActive ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n            </button>\n          </label>\n          {pass ? '' : <p className={css.errorRassword}>Enter password</p>}\n          {em ? '' : <p className={css.errorRassword}>Enter email</p>}\n          {err ? '' : <p className={css.errorRassword}>Enter data</p>}\n          {log ? '' : <p className={css.errorRassword}>Email or password is incorrect.</p>}\n        </div>\n\n        <button type=\"submit\" className={css.bttnRegister}>\n          Login\n        </button>\n      </form>\n      <div className={css.containerLog}>\n        <p className={css.text}>Don't have an account?</p>&nbsp;\n        <NavLink className={css.link} to=\"/register\">\n          Register\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"header\":\"RegisterForm_header__ugVkt\",\"formRegister\":\"RegisterForm_formRegister__JQ41P\",\"inputRegister\":\"RegisterForm_inputRegister__fjx69\",\"bttnRegister\":\"RegisterForm_bttnRegister__h7T-X\",\"containerLog\":\"RegisterForm_containerLog__7q5c7\",\"text\":\"RegisterForm_text__cFC0o\",\"link\":\"RegisterForm_link__xu2eW\",\"passwordCont\":\"RegisterForm_passwordCont__u4mox\",\"eyeBttn\":\"RegisterForm_eyeBttn__OELqF\",\"errorRassword\":\"RegisterForm_errorRassword__S7RI4\"};","import css from '../RegisterForm/RegisterForm.module.css';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { BsEyeSlash, BsEye } from 'react-icons/bs';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [isActive, setActive] = useState(false);\n  const handleClick = () => {\n    setActive(!isActive);\n  };\n  const [isActive2, setActive2] = useState(false);\n  const handleClick2 = () => {\n    setActive2(!isActive2);\n  };\n\n  let [pass, setPass] = useState(true);\n  let [em, setEm] = useState(true);\n  let [err, setErr] = useState(true);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const emailField = form.elements.email.value;\n    const passwordField = form.elements.password.value;\n    const confirmPasswordField = form.elements.confirmPassword.value;\n\n    if (\n      passwordField === confirmPasswordField &&\n      emailField &&\n      passwordField !== '' &&\n      confirmPasswordField !== ''\n    ) {\n      setPass(pass);\n      setEm(em);\n      setErr(err);\n      dispatch(\n        register({\n          email: form.elements.email.value,\n          password: form.elements.password.value,\n        })\n      );\n\n      form.reset();\n      navigate('/user');\n    } else if (\n      !emailField &&\n      confirmPasswordField === passwordField &&\n      passwordField !== '' &&\n      confirmPasswordField !== ''\n    ) {\n      setEm((em = false));\n      setErr((err = true));\n      setPass((pass = true));\n    } else if (!emailField && !passwordField && !confirmPasswordField) {\n      setErr((err = false));\n      setPass((pass = true));\n      setEm((em = true));\n    } else if (confirmPasswordField !== passwordField) {\n      setPass((pass = false));\n      setEm((em = true));\n      setErr((err = true));\n    } else if (emailField && !passwordField) {\n      setPass((pass = false));\n      setEm((em = true));\n      setErr((err = true));\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Registration</h2>\n\n      <form className={css.formRegister} onSubmit={handleSubmit}>\n        <label>\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            className={css.inputRegister}\n          ></input>\n        </label>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Password\"\n              type={isActive ? 'text' : 'password'}\n              name=\"password\"\n              className={css.inputRegister}\n            ></input>\n            <button type=\"button\" className={css.eyeBttn} onClick={handleClick}>\n              {isActive ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n            </button>\n          </label>\n        </div>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Confirm password\"\n              type={isActive2 ? 'text' : 'password'}\n              name=\"confirmPassword\"\n              className={css.inputRegister}\n            ></input>\n            <button\n              type=\"button\"\n              className={css.eyeBttn}\n              onClick={handleClick2}\n            >\n              {isActive2 ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n            </button>\n          </label>\n\n          {pass ? '' : <p className={css.errorRassword}>Password mismatch</p>}\n          {em ? '' : <p className={css.errorRassword}>Email incorrect</p>}\n          {err ? '' : <p className={css.errorRassword}>Enter data</p>}\n        </div>\n        <button type=\"submit\" className={css.bttnRegister}>\n          Registration\n        </button>\n      </form>\n      <div className={css.containerLog}>\n        <p className={css.text}>Already have an account?</p>&nbsp;\n        <NavLink className={css.link} to=\"/login\">\n          Login\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import LoginForm from \"components/LoginForm/LoginForm\";\nimport  RegisterForm  from \"../RegisterForm/RegisterForm\";\nimport  RegisterPage  from \"pages/RegisterPage/RegisterPage\";\n \n\nconst AuthForm = () => {\n\n\n  return (\n    <>\n      {RegisterPage ? <RegisterForm></RegisterForm> : <LoginForm></LoginForm>}          \n    </>\n  )\n  \n};\n\nexport default AuthForm;\n","import AuthForm from \"../../components/AuthForm/AuthForm\"\n\nconst RegisterPage = () => {\n    return (\n        <div>\n                <AuthForm></AuthForm>\n        </div>\n    );\n}\n\nexport default RegisterPage;"],"names":["dispatch","useDispatch","navigate","useNavigate","useState","isActive","setActive","pass","setPass","em","setEm","err","setErr","log","setLog","className","css","onSubmit","evt","preventDefault","form","currentTarget","emailField","elements","email","value","passwordField","password","logIn","then","data","payload","message","reset","placeholder","type","name","onClick","size","color","to","isActive2","setActive2","confirmPasswordField","confirmPassword","register","RegisterPage","LoginForm"],"sourceRoot":""}