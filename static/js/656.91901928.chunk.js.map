{"version":3,"file":"static/js/656.91901928.chunk.js","mappings":"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","sources":["webpack://group_project_6_final/./src/components/LoginForm/LoginForm.module.css?4ac5","components/LoginForm/LoginForm.jsx","webpack://group_project_6_final/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","components/AuthForm/AuthForm.jsx","pages/RegisterPage/RegisterPage.jsx","webpack://group_project_6_final/./src/pages/AddPetPage/AddPetPage.module.css?a97e"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"LoginForm_container__YDFcb\",\"header\":\"LoginForm_header__SClA8\",\"formRegister\":\"LoginForm_formRegister__efCmK\",\"inputRegister\":\"LoginForm_inputRegister__wAgzU\",\"bttnRegister\":\"LoginForm_bttnRegister__IBYPY\",\"containerLog\":\"LoginForm_containerLog__FbvL7\",\"text\":\"LoginForm_text__um7cL\",\"link\":\"LoginForm_link__IJw1a\",\"passwordCont\":\"LoginForm_passwordCont__mEq4p\",\"eyeBttn\":\"LoginForm_eyeBttn__y-8Kj\",\"errorRassword\":\"LoginForm_errorRassword__S-hoe\"};","import css from '../LoginForm/LoginForm.module.css';\nimport { BsEyeSlash, BsEye } from 'react-icons/bs';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { useState } from 'react';\nimport { logIn } from '../../redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nconst LoginForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [isActive, setActive] = useState(false);\n  const handleClick = () => {\n    setActive(!isActive);\n  };\n  let [pass, setPass] = useState(true);\n  let [em, setEm] = useState(true);\n  let [err, setErr] = useState(true);\n  let [err2, setErr2] = useState(true)\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const emailField = form.elements.email.value;\n    const passwordField = form.elements.password.value;\n\n    const credentials = {\n      email: emailField,\n      password: passwordField,\n    };\n    if (loading) {\n      return;\n    }\n\n    if (passwordField && emailField) {\n      setLoading(true);\n      try {\n        await dispatch(logIn(credentials)).then(data => {          \n          if (data.error) {\n            setErr2(false)            \n          } else {\n              form.reset();\n              navigate('/user');\n          }\n        })        \n        \n      }\n      catch (error) {\n        console.error(error)        \n      } finally {        \n        setLoading(false);\n      }\n      \n      \n    } else if (!emailField && passwordField) {\n      setEm((em = false));\n      setErr((err = true));\n      setPass((pass = true));\n    } else if (!emailField && !passwordField) {\n      setErr((err = false));\n      setPass((pass = true));\n      setEm((em = true));\n    } else if (emailField && !passwordField) {\n      setPass((pass = false));\n      setEm((em = true));\n      setErr((err = true));\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Login</h2>\n\n      <form className={css.formRegister} onSubmit={handleSubmit}>\n        <label>\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            className={css.inputRegister}\n          ></input>\n        </label>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Password\"\n              type={isActive ? 'text' : 'password'}\n              name=\"password\"\n              className={css.inputRegister}\n            ></input>\n            <button type=\"button\" className={css.eyeBttn} onClick={handleClick}>\n              {isActive ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n            </button>\n          </label>\n          {pass ? '' : <p className={css.errorRassword}>Enter password</p>}\n          {em ? '' : <p className={css.errorRassword}>Enter email</p>}\n          {err ? '' : <p className={css.errorRassword}>Enter data</p>}\n          {err2 ? '' :<p className={css.errorRassword}>Email or password incorrect</p>}\n        </div>\n\n        <button type=\"submit\" className={css.bttnRegister}>\n          Login\n        </button>\n      </form>\n      <div className={css.containerLog}>\n        <p className={css.text}>Don't have an account?</p>&nbsp;\n        <NavLink className={css.link} to=\"/register\">\n          Register\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RegisterForm_container__w0Atp\",\"header\":\"RegisterForm_header__ugVkt\",\"formRegister\":\"RegisterForm_formRegister__JQ41P\",\"inputRegister\":\"RegisterForm_inputRegister__fjx69\",\"bttnRegister\":\"RegisterForm_bttnRegister__h7T-X\",\"containerLog\":\"RegisterForm_containerLog__7q5c7\",\"text\":\"RegisterForm_text__cFC0o\",\"link\":\"RegisterForm_link__xu2eW\",\"passwordCont\":\"RegisterForm_passwordCont__u4mox\",\"eyeBttn\":\"RegisterForm_eyeBttn__OELqF\",\"errorRassword\":\"RegisterForm_errorRassword__S7RI4\"};","import css from '../RegisterForm/RegisterForm.module.css';\nimport { NavLink, useNavigate } from 'react-router-dom';\nimport { BsEyeSlash, BsEye } from 'react-icons/bs';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operations';\n// import { Formik } from 'formik';\n// import registerValidation from '../../helpers/registerDataValidation'\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n \n  const [isActive, setActive] = useState(false);\n  const handleClick = () => {\n    setActive(!isActive);\n  };\n  const [isActive2, setActive2] = useState(false);\n  const handleClick2 = () => {\n    setActive2(!isActive2);\n  };\n\n  const [loading, setLoading] = useState(false);\n\n  let [pass, setPass] = useState(true);\n  let [em, setEm] = useState(true);\n  let [err, setErr] = useState(true);\n  let[dublicate, setDublicate] = useState(true)\n\n  const handleSubmit = async evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const emailField = form.elements.email.value;\n    const passwordField = form.elements.password.value;\n    const confirmPasswordField = form.elements.confirmPassword.value;\n    const credentials = {\n      email: emailField,\n      password: passwordField,\n    };\n    if (loading) {\n      return;\n    }\n\n    if (\n      passwordField === confirmPasswordField &&\n      emailField &&\n      passwordField !== '' &&\n      confirmPasswordField !== ''\n    ) {\n      setPass(pass);\n      setEm(em);\n      setErr(err);\n      setLoading(true);\n      try {\n        const result = await dispatch(register({ credentials }));\n        if (result.payload === 'Request failed with status code 409') {\n          setDublicate(false)\n        } else {\n          setDublicate('')\n          form.reset();\n          navigate('/user');\n        }\n        \n      } catch (error) {\n        console.error(error);\n      } finally {\n        setLoading(false);\n      }\n    } else if (\n      !emailField &&\n      confirmPasswordField === passwordField &&\n      passwordField !== '' &&\n      confirmPasswordField !== ''\n    ) {\n      setEm((em = false));\n      setErr((err = true));\n      setPass((pass = true));\n    } else if (!emailField && !passwordField && !confirmPasswordField) {\n      setErr((err = false));\n      setPass((pass = true));\n      setEm((em = true));\n    } else if (confirmPasswordField !== passwordField) {\n      setPass((pass = false));\n      setEm((em = true));\n      setErr((err = true));\n    } else if (emailField && !passwordField) {\n      setPass((pass = false));\n      setEm((em = true));\n      setErr((err = true));\n    }\n  };\n\n  return (\n    <div className={css.container}>\n      <h2 className={css.header}>Registration</h2>\n      {/* <Formik validationSchema={registerValidation}> */}\n      <form className={css.formRegister} onSubmit={handleSubmit}>\n        <label>\n          <input\n            placeholder=\"Email\"\n            type=\"email\"\n            name=\"email\"\n            className={css.inputRegister}\n          ></input>\n        </label>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Password\"\n              type={isActive ? 'text' : 'password'}\n              name=\"password\"\n              className={css.inputRegister}\n            ></input>\n            <button type=\"button\" className={css.eyeBttn} onClick={handleClick}>\n              {isActive ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n            </button>\n          </label>\n        </div>\n        <div className={css.passwordCont}>\n          <label>\n            <input\n              placeholder=\"Confirm password\"\n              type={isActive2 ? 'text' : 'password'}\n              name=\"confirmPassword\"\n              className={css.inputRegister}\n            ></input>\n            <button\n              type=\"button\"\n              className={css.eyeBttn}\n              onClick={handleClick2}\n            >\n              {isActive2 ? (\n                <BsEye size={24} color=\"rgba(84, 173, 255, 1)\" />\n              ) : (\n                <BsEyeSlash size={24} color=\"rgba(84, 173, 255, 1)\" />\n              )}\n            </button>\n          </label>\n\n          {pass ? '' : <p className={css.errorRassword}>Password mismatch</p>}\n          {em ? '' : <p className={css.errorRassword}>Email incorrect</p>}\n          {err ? '' : <p className={css.errorRassword}>Enter data</p>}\n          {dublicate ? '': <p className={css.errorRassword}>Email in use.</p>}\n        </div>\n        <button type=\"submit\" className={css.bttnRegister}>\n          Registration\n        </button>\n        </form>\n        {/* </Formik> */}\n      <div className={css.containerLog}>\n        <p className={css.text}>Already have an account?</p>&nbsp;\n        <NavLink className={css.link} to=\"/login\">\n          Login\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import LoginForm from \"components/LoginForm/LoginForm\";\nimport  RegisterForm  from \"../RegisterForm/RegisterForm\";\nimport  RegisterPage  from \"pages/RegisterPage/RegisterPage\";\n \n\nconst AuthForm = () => {\n\n\n  return (\n    <>\n      {RegisterPage ? <RegisterForm></RegisterForm> : <LoginForm></LoginForm>}          \n    </>\n  )\n  \n};\n\nexport default AuthForm;\n","import AuthForm from \"../../components/AuthForm/AuthForm\"\nimport css from \"../AddPetPage/AddPetPage.module.css\"; \n\n// const str = 'vovan@mail.com';\n// const cutStr = str.split('@')\n\n\nconst RegisterPage = () => {\n    return (\n        <div className={css.mainContainer}>\n                <AuthForm></AuthForm>\n        </div>\n    );\n}\n\nexport default RegisterPage;","// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"AddPetPage_mainContainer__JfxWF\"};"],"names":["dispatch","useDispatch","navigate","useNavigate","useState","isActive","setActive","pass","setPass","em","setEm","err","setErr","err2","setErr2","loading","setLoading","handleSubmit","evt","preventDefault","form","currentTarget","emailField","elements","email","value","passwordField","password","credentials","logIn","then","data","error","reset","console","className","css","onSubmit","placeholder","type","name","onClick","size","color","to","isActive2","setActive2","dublicate","setDublicate","confirmPasswordField","confirmPassword","register","payload","RegisterPage","LoginForm"],"sourceRoot":""}